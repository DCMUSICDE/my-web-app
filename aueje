<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>VLC-like Web App</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #333;
      color: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .player-container {
      width: 80%;
      max-width: 800px;
      background-color: #222;
      border: 2px solid #444;
      padding: 10px;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.8);
    }

    video {
      width: 100%;
      height: auto;
    }

    .controls {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 10px;
    }

    .controls button, .controls input {
      background-color: #444;
      color: #fff;
      border: none;
      padding: 8px;
      cursor: pointer;
    }

    .controls button:hover {
      background-color: #666;
    }
  </style>
</head>
<body>

  <div class="player-container">
    <video id="videoPlayer" controls>
      Your browser does not support the video tag.
    </video>

    <div class="controls">
      <button id="playPauseBtn">Play</button>
      <input type="file" id="fileInput" accept="video/*">
      <input type="range" id="volumeControl" min="0" max="1" step="0.1" value="1">
      <button id="fullscreenBtn">Fullscreen</button>
    </div>
  </div>

  <script>
    const videoPlayer = document.getElementById('videoPlayer');
    const playPauseBtn = document.getElementById('playPauseBtn');
    const fileInput = document.getElementById('fileInput');
    const volumeControl = document.getElementById('volumeControl');
    const fullscreenBtn = document.getElementById('fullscreenBtn');

    // Play/Pause functionality
    playPauseBtn.addEventListener('click', () => {
      if (videoPlayer.paused) {
        videoPlayer.play();
        playPauseBtn.textContent = 'Pause';
      } else {
        videoPlayer.pause();
        playPauseBtn.textContent = 'Play';
      }
    });

    // File selection
    fileInput.addEventListener('change', (event) => {
      const file = event.target.files[0];
      const fileURL = URL.createObjectURL(file);
      videoPlayer.src = fileURL;
      videoPlayer.play();
      playPauseBtn.textContent = 'Pause';
    });

    // Volume control
    volumeControl.addEventListener('input', (event) => {
      videoPlayer.volume = event.target.value;
    });

    // Fullscreen functionality
    fullscreenBtn.addEventListener('click', () => {
      if (videoPlayer.requestFullscreen) {
        videoPlayer.requestFullscreen();
      } else if (videoPlayer.mozRequestFullScreen) { // Firefox
        videoPlayer.mozRequestFullScreen();
      } else if (videoPlayer.webkitRequestFullscreen) { // Chrome, Safari and Opera
        videoPlayer.webkitRequestFullscreen();
      } else if (videoPlayer.msRequestFullscreen) { // IE/Edge
        videoPlayer.msRequestFullscreen();
      }
    });
  </script>

</body>
</html>
